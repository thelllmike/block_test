{"version":3,"file":"type.js","sourceRoot":"","sources":["../../../src/types/core/type.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,iDAAiD;AASjD,MAAM,UAAU,UAAU;IACxB,OAAO,CAAC,KAAiD,EAAK,EAAE,CAAC,KAAU,CAAC;AAC9E,CAAC;AAGD,MAAM,CAAC,MAAM,SAAS,GAAG,UAAU,EAAa,CAAC;AAGjD,MAAM,CAAC,MAAM,aAAa,GAAG,UAAU,EAAiB,CAAC;AAGzD,MAAM,CAAC,MAAM,YAAY,GAAG,UAAU,EAAgB,CAAC;AAGvD,MAAM,UAAU,SAAS,CAAC,GAAW;IACnC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAc,CAAC;AACtC,CAAC","sourcesContent":["// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\ninterface Tag<T extends string, RealType> {\n  __tag__: T;\n  __realType__: RealType;\n}\n\nexport type OpaqueType<T extends string, U> = U & Tag<T, U>;\n\nexport function OpaqueType<T extends Tag<string, unknown>>() {\n  return (value: T extends Tag<string, infer U> ? U : never): T => value as T;\n}\n\nexport type HexString = OpaqueType<'HexString', string>;\nexport const HexString = OpaqueType<HexString>();\n\nexport type AddressString = OpaqueType<'AddressString', string>;\nexport const AddressString = OpaqueType<AddressString>();\n\nexport type BigIntString = OpaqueType<'BigIntString', string>;\nexport const BigIntString = OpaqueType<BigIntString>();\n\nexport type IntNumber = OpaqueType<'IntNumber', number>;\nexport function IntNumber(num: number): IntNumber {\n  return Math.floor(num) as IntNumber;\n}\n\nexport type Callback<T> = (err: Error | null, result: T | null) => void;\n"]}