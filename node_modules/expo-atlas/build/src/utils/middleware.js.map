{"version":3,"file":"middleware.js","sourceRoot":"","sources":["../../../src/utils/middleware.ts"],"names":[],"mappings":";;;;;AA0BA,sDAuBC;AAjDD,uDAAsE;AACtE,oDAA8B;AAC9B,kDAA4B;AAC5B,8CAAwB;AACxB,8DAA8C;AAE9C,6BAA4B;AAG5B,IAAM,aAAa,GAAG,cAAI,CAAC,OAAO,CAAC,SAAS,EAAE,yBAAyB,CAAC,CAAC;AAEzE;;;;;;;;;;;;;;GAcG;AACH,SAAgB,qBAAqB,CAAC,MAAmB;IACvD,MAAM,CAAC,iBAAiB,GAAG,MAAM,CAAC;IAElC,IAAM,UAAU,GAAG,IAAA,iBAAO,GAAE,CAAC;IAE7B,IAAI,SAAG,CAAC,UAAU,EAAE,CAAC;QACnB,UAAU,CAAC,GAAG,CAAC,IAAA,gBAAM,EAAC,MAAM,CAAC,CAAC,CAAC;IACjC,CAAC;IAED,UAAU,CAAC,GAAG,CACZ,IAAA,sBAAkB,EAAC,cAAI,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,EAAE;QACrD,MAAM,EAAE,IAAI;QACZ,UAAU,EAAE,CAAC,MAAM,CAAC;KACrB,CAAC,CACH,CAAC;IAEF,UAAU,CAAC,GAAG,CACZ,IAAA,2BAAoB,EAAC;QACnB,KAAK,EAAE,cAAI,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC;KAC1C,CAAC,CACH,CAAC;IAEF,OAAO,UAAU,CAAC;AACpB,CAAC","sourcesContent":["import { createRequestHandler } from '@expo/server/build/vendor/http';\nimport connect from 'connect';\nimport morgan from 'morgan';\nimport path from 'path';\nimport serveStaticHandler from 'serve-static';\n\nimport { env } from './env';\nimport { type AtlasSource } from '../data/types';\n\nconst ATLAS_UI_PATH = path.resolve(__dirname, '../../../build/atlas-ui');\n\n/**\n * Initialize Expo Atlas to gather statistics from Metro during development.\n * This function creates a connect middleware to serve the webui and the Atlas API.\n * It's designed to use any `AtlasSource` implementation and passes it to the webui.\n *\n * @example ```js\n *   import { createAtlasMiddleware, MetroGraphSource } from 'expo-atlas/middleware';\n *\n *   const source = new MetroGraphSource();\n *   const middleware = createAtlasMiddleware(source);\n *\n *   source.onSerializeGraph(...);\n *   app.use('/_expo/atlas', middleware);\n * ```\n */\nexport function createAtlasMiddleware(source: AtlasSource) {\n  global.EXPO_ATLAS_SOURCE = source;\n\n  const middleware = connect();\n\n  if (env.EXPO_DEBUG) {\n    middleware.use(morgan('tiny'));\n  }\n\n  middleware.use(\n    serveStaticHandler(path.join(ATLAS_UI_PATH, 'client'), {\n      maxAge: '1h',\n      extensions: ['html'],\n    })\n  );\n\n  middleware.use(\n    createRequestHandler({\n      build: path.join(ATLAS_UI_PATH, 'server'),\n    })\n  );\n\n  return middleware;\n}\n"]}