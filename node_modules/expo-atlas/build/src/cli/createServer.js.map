{"version":3,"file":"createServer.js","sourceRoot":"","sources":["../../../src/cli/createServer.ts"],"names":[],"mappings":";;;;;AAOA,oCAiBC;AAxBD,4DAAsC;AACtC,oDAA8B;AAG9B,2DAA0D;AAC1D,kDAA4D;AAE5D,SAAgB,YAAY,CAAC,OAAgB;IAC3C,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,YAAY,CAAC;IAEpC,IAAM,MAAM,GAAG,IAAI,iCAAe,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACtD,IAAM,UAAU,GAAG,IAAA,kCAAqB,EAAC,MAAM,CAAC,CAAC;IACjD,IAAM,OAAO,GAAG,cAAc,CAAC,CAAC,+CAA+C;IAE/E,IAAM,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;IAEtB,GAAG,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,wGAAwG;IACrI,GAAG,CAAC,GAAG,CAAC,IAAA,qBAAW,GAAE,CAAC,CAAC;IACvB,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;IAE7B,yCAAyC;IACzC,GAAG,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,GAAG,EAAE,IAAI,IAAK,OAAA,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,EAA/D,CAA+D,CAAC,CAAC;IAE7F,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["import compression from 'compression';\nimport express from 'express';\n\nimport { type Options } from './resolveOptions';\nimport { AtlasFileSource } from '../data/AtlasFileSource';\nimport { createAtlasMiddleware } from '../utils/middleware';\n\nexport function createServer(options: Options) {\n  process.env.NODE_ENV = 'production';\n\n  const source = new AtlasFileSource(options.atlasFile);\n  const middleware = createAtlasMiddleware(source);\n  const baseUrl = '/_expo/atlas'; // Keep in sync with webui `app.json` `baseUrl`\n\n  const app = express();\n\n  app.disable('x-powered-by'); // http://expressjs.com/en/advanced/best-practice-security.html#at-a-minimum-disable-x-powered-by-header\n  app.use(compression());\n  app.use(baseUrl, middleware);\n\n  // Add catch-all to redirect to the webui\n  app.use((req, res, next) => (!req.url.startsWith(baseUrl) ? res.redirect(baseUrl) : next()));\n\n  return app;\n}\n"]}